// 2011月12月31日以前に売れた商品を顧客別に集計
SELECT ST.CUSTOMER_ID, SD.PRODUCT_ID, COUNT(*) FROM SALES_TRAN ST JOIN SALES_DETAIL SD ON ST.SALES_ID = SD.SALES_ID
WHERE '2011-01-01' <= ST.SALES_DATE AND ST.SALES_DATE <= '2011-12-31'
GROUP BY ST.CUSTOMER_ID, SD.PRODUCT_ID;

// 2015年1月6日に売れた商品
SELECT ST.SALES_DATE, ST.CUSTOMER_ID, SD.PRODUCT_ID FROM SALES_TRAN ST JOIN SALES_DETAIL SD ON ST.SALES_ID = SD.SALES_ID
WHERE ST.SALES_DATE = '2015-01-06';

// 2015年1月6日に売れた商品個数（顧客・商品別）
SELECT ST.CUSTOMER_ID, SD.PRODUCT_ID, COUNT(*) FROM SALES_TRAN ST JOIN SALES_DETAIL SD ON ST.SALES_ID = SD.SALES_ID
WHERE ST.SALES_DATE = '2015-01-06'
GROUP BY ST.CUSTOMER_ID, SD.PRODUCT_ID;

// 2015年1月の売り上げが大きい顧客（大きい方ら順にソートして表示）
SELECT ST.CUSTOMER_ID, SUM(SD.PRODUCT_PRICE * SD.SALES_COUNT) AS SALES_AMOUNT
FROM SALES_TRAN ST
INNER JOIN SALES_DETAIL SD ON ST.SALES_ID = SD.SALES_ID
WHERE DATE_FORMAT(ST.SALES_DATE, '%Y%m') = '201501'
GROUP BY ST.CUSTOMER_ID
ORDER BY SALES_AMOUNT DESC;

// 上記の確認用SQL
SELECT ST.CUSTOMER_ID, SD.PRODUCT_PRICE, SD.SALES_COUNT
FROM SALES_TRAN ST
LEFT JOIN SALES_DETAIL SD ON ST.SALES_ID = SD.SALES_ID
WHERE DATE_FORMAT(ST.SALES_DATE, '%Y%m') = '201501'
AND ST.CUSTOMER_ID = '99';

// 2015年1月の前年同月と比べて売り上げが伸びた顧客 -- ビューを使う
DROP VIEW THIS_SALES;
DROP VIEW PREV_SALES;

CREATE VIEW THIS_SALES
AS SELECT ST.CUSTOMER_ID, SUM(SD.PRODUCT_PRICE * SD.SALES_COUNT) AS SALES_AMOUNT
FROM SALES_TRAN ST INNER JOIN SALES_DETAIL SD
ON ST.SALES_ID = SD.SALES_ID
WHERE DATE_FORMAT(ST.SALES_DATE, '%Y%m') = '201501'
GROUP BY ST.CUSTOMER_ID;

CREATE VIEW PREV_SALES
AS SELECT ST.CUSTOMER_ID, SUM(SD.PRODUCT_PRICE * SD.SALES_COUNT) AS SALES_AMOUNT
FROM SALES_TRAN ST INNER JOIN SALES_DETAIL SD
ON ST.SALES_ID = SD.SALES_ID
WHERE DATE_FORMAT(ST.SALES_DATE, '%Y%m') = '201401'
GROUP BY ST.CUSTOMER_ID;

SELECT THIS_SALES.CUSTOMER_ID, THIS_SALES.SALES_AMOUNT, PREV_SALES.SALES_AMOUNT,
THIS_SALES.SALES_AMOUNT - PREV_SALES.SALES_AMOUNT AS SALES_AMOUNT_DIFF
FROM THIS_SALES INNER JOIN PREV_SALES
ON THIS_SALES.CUSTOMER_ID = PREV_SALES.CUSTOMER_ID
ORDER BY SALES_AMOUNT_DIFF DESC;

// 2015年1月の前年同月と比べて売り上げが伸びた顧客 -- 中間テーブル
CREATE TEMPORARY TABLE THIS_SALES
SELECT ST.CUSTOMER_ID, SUM(SD.PRODUCT_PRICE * SD.SALES_COUNT) AS THIS_SALES_AMOUNT
FROM SALES_TRAN ST INNER JOIN SALES_DETAIL SD
ON ST.SALES_ID = SD.SALES_ID
WHERE DATE_FORMAT(ST.SALES_DATE, '%Y%m') = '201501'
GROUP BY ST.CUSTOMER_ID;

CREATE TEMPORARY TABLE PREV_SALES
SELECT ST.CUSTOMER_ID, SUM(SD.PRODUCT_PRICE * SD.SALES_COUNT) AS PREV_SALES_AMOUNT
FROM SALES_TRAN ST INNER JOIN SALES_DETAIL SD
ON ST.SALES_ID = SD.SALES_ID
WHERE DATE_FORMAT(ST.SALES_DATE, '%Y%m') = '201401'
GROUP BY ST.CUSTOMER_ID;

SELECT THIS_SALES.CUSTOMER_ID, THIS_SALES_AMOUNT, PREV_SALES_AMOUNT,
THIS_SALES_AMOUNT - PREV_SALES_AMOUNT AS SALES_AMOUNT_DIFF
FROM THIS_SALES INNER JOIN PREV_SALES
ON THIS_SALES.CUSTOMER_ID = PREV_SALES.CUSTOMER_ID
ORDER BY SALES_AMOUNT_DIFF DESC;

// 2015年1月の前年同月と比べて売り上げが伸びた顧客 -- 多段ジョイン
SELECT ST1.CUSTOMER_ID, SUM(SD1.PRODUCT_PRICE * SD1.SALES_COUNT) AS THIS_SALES_AMOUNT,
PREV_SALES_AMOUNT,
SUM(SD1.PRODUCT_PRICE * SD1.SALES_COUNT) - PREV_SALES_AMOUNT AS SALES_AMOUNT_DIFF
FROM SALES_TRAN ST1
INNER JOIN SALES_DETAIL SD1 ON ST1.SALES_ID = SD1.SALES_ID
INNER JOIN (
    SELECT ST2.CUSTOMER_ID, SUM(SD2.PRODUCT_PRICE * SD2.SALES_COUNT) AS PREV_SALES_AMOUNT
    FROM SALES_TRAN ST2 INNER JOIN SALES_DETAIL SD2 ON ST2.SALES_ID = SD2.SALES_ID
    WHERE DATE_FORMAT(ST2.SALES_DATE, '%Y%m') = '201401'
    GROUP BY ST2.CUSTOMER_ID
    ) AS PREV
ON ST1.CUSTOMER_ID = PREV.CUSTOMER_ID
WHERE DATE_FORMAT(ST1.SALES_DATE, '%Y%m') = '201501'
GROUP BY ST1.CUSTOMER_ID
ORDER BY SALES_AMOUNT_DIFF DESC;
